name: Python Release

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: windows-latest
    permissions: write-all

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.13'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller flake8
        pip install -r requirements.txt
        pip install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cu118

    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Build with PyInstaller
      run: pyinstaller main.spec

    - name: Copy config file
      run: |
        copy config.ini.example dist\smartcv\config.ini

    - name: Create zip file
      run: |
        cd dist\smartcv
        powershell Compress-Archive -Path * -DestinationPath ..\release.zip

    - name: Upload binaries to release
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: dist/release.zip
        tag: ${{ github.ref }}
        overwrite: true

    - name: Remove CUDA based dependencies and reinstall CPU based ones for CPU build
      run: |
        pip uninstall torch torchvision torchaudio
        pip install torch torchvision torchaudio

    - name: Build CPU based release
      run: pyinstaller main.spec --no-confirm

    - name: Create zip file for CPU release
      run: |
        cd dist\smartcv
        powershell Compress-Archive -Path * -DestinationPath ..\release-cpu.zip

    - name: Upload CPU release binaries to release
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: dist/release-cpu.zip
        tag: ${{ github.ref }}
        overwrite: true
